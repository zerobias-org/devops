name: 'Zerobias-org Release Announcement'
description: 'Publish a release announcement to slack and the event router'
inputs:
  image-name:
    description: 'Name of the image to publish'
    required: true
  image-version:
    description: 'Version of the image to publish'
    required: true
  context-dir:
    description: 'Folder containing the Dockerfile'
    required: true
  build-args:
    description: 'List of build args for the Dockerfile'
    required: false
    default: ''
  github-token: 
    description: 'GitHub token to use'
    required: true
  since:
    description: 'Ref to compare to for determining releases'
    required: false
    default: 'HEAD~1'
  pre-release:
    description: 'Whether this is a pre-release'
    required: false
    default: 'false'
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: configure aws tools creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.PUBLISHING_ROLE }}
        role-session-name: ${{ github.event.repository.name }}
        aws-region: ${{ env.PUBLISHING_REGION }}

    - name: Generate Slack Message 
      id: generateSlackMessage
      shell: bash
      run: |
        git pull
        touch slackmessage
        npx lerna list --since ${{ inputs.since }} --json --no-progress | jq -cr '.[:20] | .[]' | while read -r pkg; do
          name=$(echo $pkg | jq -r '.name')
          version=$(echo $pkg | jq -r '.version')
          echo "${name}@${version}" >> slackmessage
          echo "https://github.com/${GITHUB_REPOSITORY}/blob/${GITHUB_REF_NAME}/$(realpath --relative-to=. $(echo $pkg | jq -r '.location'))/CHANGELOG.md" >> slackmessage;
          echo "$(npm view ${name}@${version} dist-tags --json | jq -cr)" >> slackmessage
        done;
        printf "SLACK_MESSAGE<<EOF\n%s\nEOF" "$(cat slackmessage)"
        printf "SLACK_MESSAGE<<EOF\n%s\nEOF" "$(cat slackmessage)" >> "$GITHUB_OUTPUT"
      env:
        NPM_TOKEN: ${{ env.READ_TOKEN }}
        READ_TOKEN: ${{ env.READ_TOKEN }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      if: ${{ env.SLACK_MESSAGE != '' }}
      env:
        SLACK_COLOR: good
        SLACK_WEBHOOK: ${{ env.SLACK_RELEASES_WEBHOOK }}
        SLACK_ICON_EMOJI: ':robot:'
        MSG_MINIMAL: 'true'
        SLACK_TITLE: ':gear: new ${{ github.repository }} artifacts published :tada:'
        SLACK_MESSAGE: '${{ steps.generateSlackMessage.outputs.SLACK_MESSAGE }}'
        SLACK_FOOTER: ''

    - name: Get current PR
      uses: 8BitJonny/gh-get-current-pr@2.1.3
      id: pr

    - name: Get published packages
      id: getPublishedPackages
      shell: bash
      run: |
        PACKAGE_DIRS=$(npx lerna list --since ${{ inputs.since }} --json --no-progress | jq -cr '[ .[] | .location ]')
        # echo "packageDirs=$PACKAGE_DIRS" >> $GITHUB_OUTPUT
        echo "$PACKAGE_DIRS" > ./.published_packages
      env:
        READ_TOKEN: ${{ env.READ_TOKEN }}

    # - name: Publish Release Event
    #   uses: zerobias-org/devops/actions/publish-release-event@main
    #   env:
    #     PR_ID: ${{ steps.pr.outputs.number }}
    #     PR_URL: ${{ steps.pr.outputs.pr_url }}
    #     PR_LABELS: ${{ steps.pr.outputs.pr_labels }}
    #     PUBLISHED_PKGS_FILE: ./.published_packages
    #     NPM_TOKEN: ${{ env.READ_TOKEN }}
