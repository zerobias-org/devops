name: 'Deploy to S3'
description: 'Builds and deploys a JavaScript app to an S3 bucket'
inputs:
  app-name:
    description: 'Name of the application directory'
    required: true
  s3-bucket:
    description: 'Target S3 bucket name'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
  role-to-assume:
    description: 'ARN of the AWS IAM role to assume via OIDC'
    required: true
  app-base-path:
    description: 'Base path where applications are located (default: ".")'
    required: false
    default: '.'
  bucket-prefix:
    description: 'Optional prefix inside the S3 bucket (default: none)'
    required: false
    default: ''
  bucket-override-app-name:
    description: 'Overrides the folder name inside the bucket'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'

    - name: Set working path
      id: set-path
      shell: bash
      run: |
        echo "APP_PATH=${{ inputs.app-base-path }}/${{ inputs.app-name }}" >> $GITHUB_ENV
        TARGET_NAME="${{ inputs.bucket-override-app-name }}"
        if [ -z "$TARGET_NAME" ]; then
          TARGET_NAME="${{ inputs.app-name }}"
        fi
        if [ -n "${{ inputs.bucket-prefix }}" ]; then
          echo "BUCKET_PATH=${{ inputs.bucket-prefix }}/$TARGET_NAME" >> $GITHUB_ENV
        else
          echo "BUCKET_PATH=$TARGET_NAME" >> $GITHUB_ENV
        fi

    - name: Install dependencies
      shell: bash
      run: npm ci
      working-directory: ${{ env.APP_PATH }}

    - name: Build application
      shell: bash
      run: npm run build
      working-directory: ${{ env.APP_PATH }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}

    - name: Sync to S3
      shell: bash
      run: |
        aws s3 sync ${{ env.APP_PATH }}/dist s3://${{ inputs.s3-bucket }}/${{ env.BUCKET_PATH }} --delete
